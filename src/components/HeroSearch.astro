---
import SearchIcon from "@icons/Search.astro"
import { getStudies } from "@lib/get-ij-studies"
import SectionContainer from "@components/SectionContainer.astro"

const SHORTCUTS = [
  {
    target: "_blank",
    rel: "noopener noreferrer",
    label: "üå±  Sin experiencia",
    href: "https://www.infojobs.net/jobsearch/search-results/list.xhtml?keyword=&segmentId=&page=1&sortBy=PUBLICATION_DATE&onlyForeignCountry=false&countryIds=17&sinceDate=ANY&experienceMin=_0_YEARS&experienceMax=_0_YEARS",
  },
  {
    target: "_blank",
    rel: "noopener noreferrer",
    label: "üóìÔ∏è  Findes",
    href: "https://www.infojobs.net/ofertas-trabajo/fines-de-semana",
  },
  {
    target: "_blank",
    rel: "noopener noreferrer",
    label: "üïí  Media jornada",
    href: "https://www.infojobs.net/ofertas-trabajo/media-jornada",
  },
  {
    target: "_blank",
    rel: "noopener noreferrer",
    label: "üíº  Pr√°cticas",
    href: "https://www.infojobs.net/ofertas-trabajo/practicas",
  },
] as const

const studies = await getStudies()
const sortedStudies = studies.sort((a, b) => a.order - b.order)
---
<SectionContainer>
  <section
    class="bg-hero-pattern rounded-3xl px-4 py-6 md:w-full md:max-w-7xl md:mx-auto"
  >
    <h1
      class="text-black/80 font-semibold tracking-[0.35px] text-2xl text-center pb-4 sm:text-4xl lg:hidden"
    >
      Tu carrera empieza aqu√≠
    </h1>

    <h1
      class="hidden text-black/80 font-semibold tracking-[0.35px] text-2xl text-center pb-4 sm:text-4xl lg:pb-8 lg:block"
    >
      Conecta tus estudios con el empleo ideal
    </h1>

    <search class="bg-white rounded-3xl p-4 lg:mx-10">
      <form id="hero-form" class="mx-5 lg:flex lg:justify-between">
        <div class="lg:w-full lg:pr-10">
          <select
            name="study-level"
            class="w-full py-4 border-b border-gray-300 text-gray-400 bg-transparent cursor-pointer"
            aria-label="Selecciona tu nivel de estudios"
          >
            {
              sortedStudies.map(({ id, value }) => {
                const isDefault = id === 0
                const literal = isDefault ? "Nivel de estudios" : value

                return (
                  <option
                    class={isDefault ? "" : "text-gray-600"}
                    value={id}
                    disabled={isDefault}
                    selected={isDefault}
                  >
                    {literal}
                  </option>
                )
              })
            }
          </select>
        </div>

        <div class="lg:w-full">
          <input
            name="keywords"
            placeholder="Estudios, puesto, empresa..."
            class="w-full py-4 border-b border-gray-300 text-gray-600 focus:outline-none lg:border-none"
          />
        </div>

        <div class="mb-8 lg:mb-0 lg:w-full">
          <input
            name="geolocation"
            placeholder="Provincia o poblaci√≥n"
            class="w-full py-4 border-b border-gray-300 text-gray-600 focus:outline-none lg:border-none"
          />
        </div>

        <button
          class="shadow-md rounded-xl text-lg font-medium bg-accent hover:saturate-150 transition text-white px-4 py-2 inline-flex gap-x-2 justify-center items-center w-full lg:size-12 lg:mt-1 lg:hover:scale-105 lg:rounded-full"
          aria-label="Buscar ofertas"
        >
          <SearchIcon />
          <p class="lg:hidden">Buscar ofertas</p>
        </button>
      </form>
    </search>

    <footer>
      <h5 class="text-center pt-8 pb-4">Explora trabajos que se adaptan a ti</h5>
      <div class="flex flex-wrap gap-4 justify-center">
        {
          SHORTCUTS.map(({ label, href, target, rel }) => (
            <a
              class="rounded-2xl p-4 lg:px-6 shadow-sm text-gray-700 bg-sky-300 transition hover:scale-105 hover:text-white hover:bg-primary"
              href={href}
              target={target}
              rel={rel}
            >
              {label}
            </a>
          ))
        }
      </div>
    </footer>
  </section>
</SectionContainer>

<script>
  const select = document.querySelector("select")

  function updateColors() {
    if (select?.value !== "indicar-nivel") {
      select?.classList.add("text-gray-600")
    }
  }

  document.addEventListener("DOMContentLoaded", updateColors)
  select?.addEventListener("change", updateColors)
</script>

<script>
  import { generateInfoJobsURL } from "@lib/generate-infojobs-url"

  const form = document.querySelector("#hero-form") as HTMLFormElement

  form?.addEventListener("submit", (event) => {
    event.preventDefault()
    const formData = new FormData(form)
    const level = formData.get("study-level")?.toString() ?? ""
    const keyword = formData.get("keywords")?.toString() ?? ""
    const provinceIds = formData.get("geolocation")?.toString() ?? ""

    const searchURL = generateInfoJobsURL({
      keyword,
      level,
      provinceIds,
    })

    window.location.href = searchURL
  })
</script>
